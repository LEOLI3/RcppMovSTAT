Rcpp::sourceCpp('src/movMean.cpp')
movMeanr(c(1, 4, 3, NA, 8), 3, na_rm = T, w = c(0.5, 0.2, 0.3))
movMean(c(1, 4, 3, NA, 8), 3, w = c(0.5, 0.2, 0.3), align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
Rcpp::sourceCpp('src/movMean.cpp')
Rcpp::sourceCpp('src/movMean.cpp')
Rcpp::sourceCpp('src/movMean.cpp')
?movMean
movMean(c(1, 4, 3, NA, 8), 3, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
Rcpp::sourceCpp('src/movMean.cpp')
library(devtools)
document()
lirary(roxygen2)
library(roxygen2)
reorginize()
roxygenise()
roxygenize()
roxygenize()
document()
?movMean
?sum
movMean(c(1, 4, 3, NA, 8), 3, align = "right")
movMean(c(1, 4, 3, NaN, 8), 3, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
document
document
document()
?movMean
document()
?movMean
document()
?movMean
document()
?movMean
document()
?movMean
document()
?movMean
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = T)
document()
?movMean
3.9/0.8
movMean(c(1, 4, 3, NA, 8), 3, w = c(0.5, 0.2, 0.3), na_rm = T, align = "right")
document()
?movMean
document()
?movMean
quantile
?quantile
library(caTools)
?runquantile
roll_mean
roll_mean
RcppRoll
library(RcppRoll)
?roll_mean
?stats
document()
?movMean
document()
?movMean
sum()
document()
?movMean
document()
?movMean
?roll_mean
document()
?movMean
install.packages('RcppRoll')
install.packages("RcppRoll")
library(RcppRoll)
document()
library(devtools)
document()
document()
?movMean
?sum
document()
?movMean
install.packages("stringi")
install.packages("stringi")
library(devtools)
document()
?movMean
document()
?movMean
?runquantile
?Module
document()
?movMean
document()
?movMean
library(caTools)
?runquantile
load_all()
detach("package:utils", unload=TRUE)
?runquantile
quantile
?quantile
?module
?Module
?foo
?summary
library(devtools)
document
document()
?movMean
library(RcppMovStat)
?movMean
zoo::rollmedian()
?zoo::rollmedian
Rcpp::sourceCpp('src/movMean.cpp')
movMean(c(1, 4, 3, NA, 8), 3, align = "right")
movMean(c(1, 4, 3, NA, 8), 3, align = "right")
movMean(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMean(c(1, 4, 3, NA, 8), 3, align = "right")
movMean(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "right")
movMean(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "middle")
movMean(c(1, 4, 3, NA, 8), 3, ss = 3, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMean(vec = c(1, 4, 3, NA, 8), n = 3, ss = 3, na_rm = T, align = "right")
movMean(vec = c(1, 4, 3, NA, 8), n = 3, ss = 1, na_rm = T, align = "right")
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMeanr(c(1, 4, 3, NA, 8), 3, na_rm = T)
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "right")
movMean(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "middle")
movMeanr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T)
movMeanr(c(1, 4, 3, NA, 8), 3, na_rm = T)
movMean(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, w = c(5, 2, 3), na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMean(c(1, 4, 3, NA, 8), 3, w = c(0.5, 0.2, 0.3), na_rm = T, align = "middle")
movMean(c(1, 4, 3, NA, 8), 3, w = c(0.5, 0.2, 0.3), na_rm = T, align = "middle")
movMean(c(1, 4, 3, NA, 8), 3, w = c(5, 2, 3), na_rm = T, align = "middle")
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "right")
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, na_rm = T, align = "right")
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "right")
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, sizeD = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movMean.cpp')
movMeanr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T)
movMeanr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, na_rm = T)
movMeanr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, sizeD = T)
movMean(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, sizeD = T)
document()
library(devtools)
document()
?movMean
Rcpp::sourceCpp('src/movQt.cpp')
Rcpp::sourceCpp('src/movQt.cpp')
Rcpp::sourceCpp('src/movQt.cpp')
Rcpp::sourceCpp('src/movQt.cpp')
movQt(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, sizeD = T)
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T)
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, na_rm = T)
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, sizeD = T)
Rcpp::sourceCpp('src/movQt.cpp')
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T)
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, na_rm = T)
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, sizeD = T)
movQt(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "right")
movQt(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "right")
movQt(c(1, 4, 3, NA, 8), 3, align = "right")
movQtr(c(1, 4, 3, NA, 8), 3)
movQtr(c(1, 4, 3, NA, 8), n = 3)
Rcpp::sourceCpp('src/movQt.cpp')
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T)
movQtr(vec = c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, na_rm = T)
movQt(c(1, 4, 3, NA, 8), 3, align = "right")
movQt(c(1, 4, 3, NA, 8), 3, na_rm = T, align = "right")
movQt(c(1, 4, 3, NA, 8), 3, align = "left")
document()
?movMean
library(RcppRoll)
?roll_mean
library(RcppMovStat)
Rcpp::sourceCpp('src/movMean.cpp')
library(RcppMovStat)
?movMean
document()
?movMean
library(RcppMovStat)
?movMean
View(movMean)
movQt(vec = c(1, 4, 3, NA, NA, NA, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "middle")
Rcpp::sourceCpp('src/movQt.cpp')
movQt(vec = c(1, 4, 3, NA, NA, NA, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "middle")
document
document()
?movQt
?movQt
?quantile
document()
?TTR::EMA
document()
?movEmean
floor
?floor
Rcpp::sourceCpp('src/movQt.cpp')
Rcpp::sourceCpp('src/movCount.cpp')
Rcpp::sourceCpp('src/movCount.cpp')
document()
library(devtools)
document()
?movCount
document()
?movCount
document()
document()
?movCount
?movCountr
Rcpp::sourceCpp('src/movSum.cpp')
Rcpp::sourceCpp('src/movSum.cpp')
Rcpp::sourceCpp('src/movSum.cpp')
movSum(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = T)
movSum(c(1, 4, 3, NA, 8), 3, w = c(0.5, 0.2, 0.3), na_rm = T, align = "right")
movSum(c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = T, align = "right")
document()
quantile(c(1,3,2), 0)
movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
?movQt
library(RcppMovStat)
library(RcppMovStat)
?movCount
install.packages("testthat")
library(testthat)
devtools::build()
movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
Rcpp::sourceCpp('src/movCount.cpp')
movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
?movMean
library(RcppMovStat)
movMean()
movMean
?movMean
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = TRUE)
//' movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
//' movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE, align = 'right')
//' movCountr(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
//' movCount(c(1, 4, 3, NA, NA), 2, na_rm = TRUE)
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = TRUE)
//' movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
//' movCount(c(1, 4, 3, NA, 8), 2, na_rm = TRUE, align = 'right')
//' movCountr(c(1, 4, 3, NA, 8), 2, na_rm = TRUE)
//' movCount(c(1, 4, 3, NA, NA), 2, na_rm = TRUE)
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = TRUE)
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = TRUE)
?movMean
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = TRUE)
library(RcppMovStat)
movMean(c(1, 4, 3, NA, 8), 3, align = "right", na_rm = TRUE)
movMean(c(1, 4, 3, NA, 8), n = 3, align = "right", na_rm = TRUE)
movMean(vec = c(1, 4, 3, NA, 8), n = 3, align = "right", na_rm = TRUE)
movMean(vec = c(1, 4, 3, NA, 8), n = 3, align = "right")
movMean(vec = c(1, 4, 3, NA, 8), n = 3, align = "right")
library(RcppMovStat)
movMean(c(1, 4, 3, NA, 8), n = 3, align = "right", na_rm = TRUE)
devtools::load_all(".")
system("R CMD Rd2pdf RcppMovStat")
library(RcppMovStat)
install_github("LEOLI3/RcppMovStat")
devtools::install_github("LEOLI3/RcppMovStat")
devtools::install_github("LEOLI3/RcppMovStat")
devtools::install_github("kevinushey/RcppRoll")
library(devtools)
install_github("andrewuhl/RollingWindow")
library(RcppMovStat)
library(Rcpp)
library(microbenchmark)
?RollingMean
library(RollingWindow)
library(RcppMovStat)
RollingMean(c(1, 4, 3, NA, NA), 2)
RollingMean()
?RollingMean
# the following 3 have the same result
microbenchmark(
roll_meanl(c(1, 4, 3, NA, NA), 2),
rollMean(c(1, 4, 3, NA, NA), 2),
rollMeanNA(c(1, 4, 3, NA, NA), 2),
movMean(c(1, 4, 3, NA, NA), 2),
RollingMean(c(1, 4, 3, NA, NA), 2),
times = 500
)
sourceCpp('rollMeanNA.cpp')
# the following 3 have the same result
microbenchmark(
roll_meanl(c(1, 4, 3, NA, NA), 2),
movMean(c(1, 4, 3, NA, NA), 2),
RollingMean(c(1, 4, 3, NA, NA), 2),
times = 500
)
library(RcppRoll)
?roll_mean
# the following 3 have the same result
microbenchmark(
roll_meanl(c(1, 4, 3, NA, NA), 2),
movMean(c(1, 4, 3, NA, NA), 2),
RollingMean(c(1, 4, 3, NA, NA), 2),
times = 500
)
movMean(c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = TRUE, align = "right)
)
library(RcppMovStat)
movMean(c(1, 4, 3, NA, 8, 4, 5, 9, 6, 0), n = 3, ss = 4, na_rm = TRUE, align = "right")
source("https://bioconductor.org/biocLite.R")
biocLite("BiSeq")
browseVignettes("BiSeq")
source('http://bioconductor.org/biocLite.R')
useDevel(TRUE)
biocLite('bsseq')
install.packages("git2r")
library(bsseq)
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
Rcpp::sourceCpp('src/movMeanUE.cpp')
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 2, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 2, na_rm = T)
NA == NaN
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0.2, 0.8),  n = 2, ss = 2, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 2, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 2, na_rm = T, align = "right")
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 2, na_rm = T, sizeD = T, align = "right")
Rcpp::sourceCpp('src/movMeanUE.cpp')
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 3, na_rm = T, align = "right")
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T, align = "right")
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
Rcpp::sourceCpp('src/movMeanUE.cpp')
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 3, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 3, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9),  n = 2, ss = 3, na_rm = T)
library(devtools)
document
document()
document()
document()
?movMeanUE
?movMean
document()
?movMeanUE
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2,
ss = 3, na_rm = T, align = "right")
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T, sizeD = TRUE)
ovMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = TRUE)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = TRUE)
Rcpp::sourceCpp('src/movMeanUE.cpp')
document()
?movMeanUE
library(RcppMovStat)
?movMeanUE
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = TRUE,
sizeD = TRUE)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = TRUE,
sizeD = TRUE)
library(RcppMovStat)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = TRUE,
sizeD = TRUE)
Rcpp::sourceCpp('src/movQtUE.cpp')
Rcpp::sourceCpp('src/movQtUE.cpp')
Rcpp::sourceCpp('src/movQtUE.cpp')
# movQtUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movQtUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, align = "right")
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T, align = "right")
Rcpp::sourceCpp('src/movQtUE.cpp')
# movQtUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T, align = "right")
Rcpp::sourceCpp('src/movQtUE.cpp')
Rcpp::sourceCpp('src/movQtUE.cpp')
# movQtUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T)
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
# movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 3, na_rm = T, align = "right")
# movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T, align = "right")
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T)
Rcpp::sourceCpp('src/movMeanUE.cpp')
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T)
movQtUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T)
document()
library(devtools)
document()
document()
remove.packages("RcppMovStat")
document()
document()
Rcpp::sourceCpp('src/movQtUE.cpp')
document()
Rcpp::sourceCpp('src/movQtUE.cpp')
document()
Rcpp::sourceCpp('src/movQt.cpp')
Rcpp::sourceCpp('src/movQt.cpp')
Rcpp::sourceCpp('src/movQtUE.cpp')
document()
devtools::document()
devtools::document()
library(RcppMovStat)
library(RcppMovStat)
?movCount
devtools::document()
?movCountUE
?ceiling
devtools::document()
?movCount
library(RcppMovStat)
View(movQt)
rm(movQt())
rm(movQt
)
?movCount
?movMean
?ceiling
devtools::document()
?movMean
devtools::document()
?movQtUE
library(RcppMovStat)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
# movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
# movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), w = c(0, 1),  n = 2, ss = 3, na_rm = T, align = "right")
# movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T, sizeD = T, align = "right")
movMeanUE(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, ss = 3, na_rm = T)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), 2)
movMeanUEr(c(1, 4, 3, NA, 8), pos = c(1, 2, 7, 8, 9), n = 2, na_rm = T)
library(RcppMovStat)
remove.packages("RcppMovStat")
library(devtools)
install_github("peleonard/RcppMovStat")
library(RcppMovStat)
?useDynLib
devtools::use_testthat()
test_check("RcppMovStat")
??test_check
library(testthat)
library(RcppMovStat)
test_check("RcppMovStat")
remove.packages("RcppMovStat")
library(RcppMovStat)
library(RcppMovStat)
remove.packages("RcppMovStat")
devtools::install_github("peleonard/RcppMovStat")
library(RcppMovStat)
remove.packages("RcppMovStat")
